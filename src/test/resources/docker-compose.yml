services:
  mysqldb_load:
    image: mysql:8.0.30
    restart: unless-stopped
    env_file: ./.env
    # windows host fix
    command: >
      bash -c "
      chmod 644 /etc/my.cnf
      && /entrypoint.sh mysqld
      "
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_LOAD_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_LOAD_DATABASE
    ports:
      - $MYSQLDB_LOAD_LOCAL_PORT:$MYSQLDB_LOAD_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf
  app:
    depends_on:
      - mysqldb_load
    build: ./../../../
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOAD_LOCAL_PORT:$SPRING_LOAD_DOCKER_PORT
      - $JAVA_LOAD_DEBUG_PORT:$JAVA_LOAD_DEBUG_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb_load:$MYSQLDB_LOAD_DOCKER_PORT/$MYSQLDB_LOAD_DATABASE?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "$MYSQLDB_LOAD_USER",
        "spring.datasource.password" : "$MYSQLDB_LOAD_ROOT_PASSWORD"
      }'
    stdin_open: true
    tty: true
  # restore db with 1'000'000 users for load testing IF the db is empty (users == 0)
  sql_init:
    image: mysql:8.0.30
    env_file: ./.env
    depends_on:
      - app
      - mysqldb_load
    command: >
      bash -c "
      chmod 644 /etc/my.cnf
      && USERCOUNT=$$(mysql -uroot -proot -D highload_social -B --disable-column-names -e 'select count(*) from users;')
      && if (($$USERCOUNT == 0)); then echo 'Will restore dump' && gunzip -k /tmp/mysql.gz && mysql -h mysqldb_load -P $MYSQLDB_LOAD_DOCKER_PORT -D $MYSQLDB_LOAD_DATABASE -uroot -p$MYSQLDB_LOAD_ROOT_PASSWORD < /tmp/mysql ; else echo 'Will not restore dump: db not empty'; fi
      "
    restart: "no"
    # do not exit: makes whole container green
    stdin_open: true
    tty: true
    volumes:
      - db:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf
      - ./generated/mysql.gz:/tmp/mysql.gz
  grafana:
    build: './metrics/config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus

volumes:
  db:
