name: social-load
services:
  app:
    depends_on:
      - percona-master
    build: ./../../../
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $JAVA_DEBUG_PORT:$JAVA_DEBUG_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url" : "jdbc:mysql://$MYSQLDB_MASTER_HOST:$MYSQLDB_MASTER_PORT/$MYSQLDB_DATABASE?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true",
        "spring.datasource.replica-url" : "jdbc:mysql://$MYSQLDB_REPLICA_HOST:$MYSQLDB_REPLICA1_PORT/$MYSQLDB_DATABASE?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD"
      }'
    stdin_open: true
    tty: true
    networks:
      - percona-network
      - service-network
  # restore db with 1'000'000 users for load testing IF the db is empty (users == 0)
  sql_init:
    image: mysql:8.0.30
    env_file: ./.env
    depends_on:
      - app
      - percona-master
    command: >
      bash -c "
      chmod 644 /etc/my.cnf
      && USERCOUNT=$$(mysql -h $MYSQLDB_MASTER_HOST -P $MYSQLDB_MASTER_PORT -uroot -proot -D highload_social -B --disable-column-names -e 'select count(*) from users;')
      && if (($$USERCOUNT == 0)); then echo 'Will restore dump' && gunzip -k /tmp/mysql.gz && mysql -h $MYSQLDB_MASTER_HOST -P $MYSQLDB_MASTER_PORT -D $MYSQLDB_DATABASE -uroot -p$MYSQLDB_ROOT_PASSWORD < /tmp/mysql ; else echo 'Will not restore dump: db not empty'; fi
      "
    restart: "no"
    # do not exit: makes whole container green
    stdin_open: true
    tty: true
    networks:
      - percona-network
    volumes:
      - percona-master:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf
      - ./generated/mysql.gz:/tmp/mysql.gz
  grafana:
    build: './metrics/config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana/ext:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - service-network
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/ext:/prometheus
    networks:
      - service-network
      - percona-network
  db-exporter:
    image: prom/mysqld-exporter
    environment:
      DATA_SOURCE_NAME: "exporter:exporter@(percona-master:$MYSQLDB_MASTER_PORT)/"
    networks:
      - percona-network
  percona-master:
    image: percona/percona-server:8.0
    env_file:
      - ".env"
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_REPLICATION_USER: $MYSQLDB_USER
      MYSQL_REPLICATION_PASSWORD: $MYSQLDB_ROOT_PASSWORD
    ports:
      - $MYSQLDB_EXTERNAL_PORT:$MYSQLDB_MASTER_PORT
    networks:
      - percona-network
    volumes:
      - percona-master:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf
  percona-replica-1:
    image: percona/percona-server:8.0
    env_file:
      - ".env"
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_REPLICATION_USER: $MYSQLDB_USER
      MYSQL_REPLICATION_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_MASTER_HOST: percona-master
      MYSQL_MASTER_PORT: $MYSQLDB_MASTER_PORT
    ports:
      - $MYSQLDB_REPLICA1_PORT:$MYSQLDB_MASTER_PORT
    networks:
      - percona-network
    volumes:
      - percona-replica-1:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf
  percona-replica-2:
    env_file:
      - ".env"
    image: percona/percona-server:8.0
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_REPLICATION_USER: $MYSQLDB_USER
      MYSQL_REPLICATION_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_MASTER_HOST: percona-master
      MYSQL_MASTER_PORT: $MYSQLDB_MASTER_PORT
    ports:
      - $MYSQLDB_REPLICA2_PORT:3306
    networks:
      - percona-network
    volumes:
      - percona-replica-2:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf
volumes:
  percona-master:
  percona-replica-1:
  percona-replica-2:
networks:
  percona-network:
  service-network:
