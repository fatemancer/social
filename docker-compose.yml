services:
  app:
    depends_on:
      - $MYSQLDB_MASTER_HOST
    build: ./core
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $JAVA_DEBUG_PORT:$JAVA_DEBUG_PORT
    environment:
      # looks like ssl=off is not sufficient, public key retrieval should be enabled (?)
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://$MYSQLDB_MASTER_HOST:$MYSQLDB_MASTER_PORT/$MYSQLDB_DATABASE?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true",
        "spring.datasource.replica-url"  : "jdbc:mysql://$MYSQLDB_REPLICA_HOST:$MYSQLDB_REPLICA1_PORT/$MYSQLDB_DATABASE?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD"
      }'
    stdin_open: true
    tty: true
  mysqldb:
    image: mysql:8.0.30
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_EXTERNAL_PORT:$MYSQLDB_MASTER_PORT
    volumes:
      - db:/var/lib/mysql
      - ./core/db/my.cnf:/etc/my.cnf:ro
  # имитируем кластер из вебсокетов
  websocket-odd:
    build: ./websocket
    restart: on-failure
    environment:
      - PARTITION_ID=1
    ports:
      - $WEBSOCKET_LOCAL_PORT:$WEBSOCKET_DOCKER_PORT
      - $WEBSOCKET_DEBUG_PORT:$JAVA_DEBUG_PORT
    depends_on:
      - app
      - kafka-server
  websocket-even:
    build: ./websocket
    restart: on-failure
    ports:
      - $WEBSOCKET_LOCAL_PORT:$WEBSOCKET_DOCKER_PORT
      - $WEBSOCKET_DEBUG_PORT:$JAVA_DEBUG_PORT
    depends_on:
      - app
      - kafka-server
    environment:
      - PARTITION_ID=2
  kafka-server:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 29093:29093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-server:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m"
    networks:
      - communal
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - communal

volumes:
  db:
  websocket: